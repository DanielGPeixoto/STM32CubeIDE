/*
 * pwm.c
 *
 *  Created on: 24/09/2022
 *      Author: daniel
 */

#include "stm32l476xx.h"


#define TIM1EN				(1U<<11)															//Enable Timer 1 Clock Access
#define CR1_CEN				(1U<<0)																//Enable counter

#define GPIOAEN				(1U<<0)

void initialize_GPIOE(void){



	/*Enable clock access to Port A*/
	RCC->AHB2ENR |= GPIOAEN;
	/*Set PA11 Mode as alternate function mode*/
	GPIOA->MODER |= (1U<<23);
	GPIOA->MODER &=~ (1U<<22);
	/*Set the alternate function AF1 to PA11*/
	GPIOA->AFR[1] |=(1U<<12);
	GPIOA->AFR[1] &=~(1U<<13);
	GPIOA->AFR[1] &=~(1U<<14);
	GPIOA->AFR[1] &=~(1U<<15);
	/*Set I/O Output speed*/
	GPIOA->OSPEEDR |=(1U<<23);
	GPIOA->OSPEEDR |=(1U<<22);
	/*Output Push-Pull */
	GPIOA->OTYPER |=(1U<<11);



}

void pwm(void)
{
	initialize_GPIOE();

	//Enable APB2 Clock access to Timer 1
	RCC->APB2ENR |= TIM1EN;
	//Load the Timer 1 Pre-scaler with 400
	TIM1->PSC = 79;
	//Load the Auto Reload with 10000
	TIM1->ARR = 100;
	//Duty Cycle
	TIM1->CCR4 = 50;
	//Set CC4 Channel as output
	TIM1->CCMR2	&=~(1U<<8);
	TIM1->CCMR2	&=~(1U<<9);
	//Set Output polarity active high
	TIM1->CCER &=~(1U<<13);
	//Output Compare 4 Mode set as PWM Mode 1  0110
	TIM1->CCMR2 &=~(1U<<12);
	TIM1->CCMR2 |= (1U<<13);
	TIM1->CCMR2 |= (1U<<14);
	TIM1->CCMR2 &=~(1U<<24);
	//Enable Pre-load Register
	TIM1->CCMR2 |= (1U<<11);
	// Capture/Compare 4 Output Enable
	TIM1->CCER |= (1U<<12);
	//Reinitializes the counter and generate  an update of registers
	TIM1->EGR  |= (1U<<0);
	//
	TIM1->BDTR  |= (1U<<15);
	//Counter register starts with 0
	//TIM1->CNT = 0;

	//Enable counter
	TIM1->CR1 = CR1_CEN;

	}
