/*UART Transmitter Driver using USART2 Peripheral*/

	/***********************Configure UART pin***************************/
	/*	Enable clock access to GPIOA for PA2 as TX line					*/
	/*	Set PA2 Mode as alternate function mode							*/
	/*	Set the alternate function typed to UART						*/
	/********************************************************************/

	/********************Configure the UART module***********************/
	/*	Enable clock access to UART2									*/
	/*	Configure baudrate												*/
	/*	Configure transfer direction									*/
	/*	Enable UART module												*/
	/********************************************************************/

#include "stm32l4xx.h"
#include <stdint.h>
#include <stdio.h>
#include "uart.h"
#include "adc.h"
#include "tim.h"

#define PIN_5				(1U<<5)
#define	LED_PIN				PIN_5


#define GPIOAEN				(1U<<0)										//shifts 1 to position 0

void dummytimer(void);

int iAnalogValue;

int main(void){

	PA4_ADC1_INIT();

	//Add delay between initialization and start of converion
	dummytimer();



	uart2_tx_init();

	tim_1hz_init();

	RCC->AHB2ENR |= GPIOAEN;
	GPIOA->MODER |= (1U<<10);
	GPIOA->MODER &=~ (1U<<11);

	start_conversion();


	while(1){




		//Wait for the Update Event to happen
		while(!(TIM1->SR & SR_UIF)){}
		//Clear the Update Event Flag once it has happened
		TIM1->SR &=~ SR_UIF;

		iAnalogValue = adc_read();
		printf("Analog Value: %d\n\r", iAnalogValue);
		GPIOA->ODR ^= LED_PIN;
		//printf("1 Segundo passou\n");



	}
}

void dummytimer(void)
{
	int count;

	for(int i=0; i < 8000; i++)
	{
		count ++;


	}
}

