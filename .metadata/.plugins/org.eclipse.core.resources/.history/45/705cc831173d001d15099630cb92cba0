/*
 * pwm.c
 *
 *  Created on: 24/09/2022
 *      Author: daniel
 */

#include "stm32l4xx.h"


#define TIM2EN				(1U<<0)															//Enable Timer 2 Clock Access
#define CR1_CEN				(1U<<0)																//Enable counter

#define GPIOEN				(1U<<4)																//Enable clock access to GPIO

void initialize_GPIOE(){
	//Configure PA0 as Alterative function
	GPIOA->MODER &=~	(1U<<0); //Coloca no pino 0 o valor 1 negado ou seja 0
	GPIOA->MODER |=		(1U<<1);
	//Configure PA0 as push-pull
	GPIOA->OTYPER &=~	(1u<<0);
	//Configure PA0 as very high speed
	GPIOA->OSPEEDR |=	(1U<<0);
	GPIOA->OSPEEDR |=	(1U<<1);
	//Configure AF1 low register
	GPIOA->AFR[0]  |=	(1U<<0);
	GPIOA->AFR[0]  &=~	(1U<<1);
	GPIOA->AFR[0]  &=~	(1U<<2);
	GPIOA->AFR[0]  &=~	(1U<<3);
	//Configure AF1 high register
	GPIOA->AFR[1]  |=	(1U<<0);
	GPIOA->AFR[1]  &=~	(1U<<1);
	GPIOA->AFR[1]  &=~	(1U<<2);
	GPIOA->AFR[1]  &=~	(1U<<3);
	//Force diconnect imput to the adc
	GPIOA->ASCR	   &=~	(1U<<0);
}
void pwm(void)
{
	initialize_GPIOE();

	//Enable APB2 Clock access to Timer 2
	RCC->APB1ENR1 |= TIM2EN;

	//Frequency determined by TIMx_ARR
	TIM2->ARR = 10;
	//Duty cycle determined by TIMx_CCRx
	TIM2->CCR1 = 50



	}
